{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/bacterial-genomics/wf-assembly-snps/main/nextflow_schema.json",
    "title": "wf-assembly-snps pipeline parameters",
    "description": "Identify SNPs from genome assemblies.",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "description": "Path to directory ** OR ** samplesheet containing FastA/Genbank files. Recognized extensions are {fasta,fas,fna,fsa,fa} with optional gzip compression.",
                    "fa_icon": "fas fa-folder-open"
                },
                "ref": {
                    "type": "string",
                    "description": "Path to file ** OR ** samplesheet containing a FastA file. Recognized extensions are {fasta,fas,fna,fsa,fa} with optional gzip compression.",
                    "fa_icon": "fas fa-folder-open"
                },
                "parsnp_outputs": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Path to directory containing existing ParSNP output files to resume workflow from Gubbins step. Use this to skip ParSNP re-computation.",
                    "fa_icon": "fas fa-folder-open"
                },
                "alignment_file": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to existing alignment file for resume (Parsnp.Core_Alignment.fasta). Used with --parsnp_outputs.",
                    "fa_icon": "fas fa-file",
                    "hidden": true
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "min_input_filesize": {
                    "type": "string",
                    "default": "1k",
                    "hidden": true,
                    "description": "Minimum file size of input data."
                }
            }
        },
        "analysis_options": {
            "title": "Analysis options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Main pipeline parameters.",
            "properties": {
                "snp_package": {
                    "type": "string",
                    "default": "parsnp",
                    "description": "Specify what alignment tool to use to identify SNPs.",
                    "enum": ["parsnp"]
                },
                "tree_method": {
                    "type": "string",
                    "default": "fasttree",
                    "description": "Tool used to infer phylogeny after masking positions due to recombination.",
                    "enum": ["fasttree", "raxml"]
                },
                "recombination": {
                    "type": "string",
                    "default": "both",
                    "description": "Tool used to classify SNPs due to recombination.",
                    "enum": ["gubbins", "clonalframeml", "both", "none"]
                },
                "skip_gingr_conversion": {
                    "type": "boolean",
                    "default": false,
                    "description": "Skip CONVERT_GINGR_TO_FASTA_HARVESTTOOLS if alignment already exists. Used with --parsnp_outputs.",
                    "hidden": true
                },
                "resume_from": {
                    "type": "string",
                    "description": "Resume from specific step: alignment, recombination, masking, tree. Used with --parsnp_outputs.",
                    "enum": ["alignment", "recombination", "masking", "tree"],
                    "hidden": true
                }
            }
        },
        "parsnp_options": {
            "title": "Parsnp options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Parsnp specific parameters.",
            "properties": {
                "min_parsnp_output_filesize": {
                    "type": "string",
                    "default": "100k",
                    "hidden": true,
                    "description": "Minimum file size of Parsnp output files."
                },
                "min_gingr_to_fasta_filesize": {
                    "type": "string",
                    "default": "1k",
                    "hidden": true,
                    "description": "Minimum file size of the FastA file generated from a Gingr file."
                },
                "curated_input": {
                    "type": "boolean",
                    "default": true,
                    "hidden": true,
                    "description": "Specify if input genomes are similar enough to be considered curated."
                },
                "max_partition_size": {
                    "type": "integer",
                    "default": 15000000,
                    "hidden": true,
                    "description": "Number of decimal points to round values."
                }
            }
        },
        "profile_options": {
            "title": "Profile options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Parameters to select which profile to use.",
            "properties": {
                "profile_cache_dir": {
                    "type": "string",
                    "format": "directory-path",
                    "hidden": true,
                    "description": "The output directory where process module containers and/or conda environments will be saved. You have to use absolute paths to storage on Cloud infrastructure."
                }
            }
        },
        "spreadsheet_parsing_options": {
            "title": "Spreadsheet parsing options",
            "type": "object",
            "description": "Spreadsheet parsing options",
            "properties": {
                "excel_sheet_name": {
                    "type": "string",
                    "default": "Sheet1",
                    "hidden": true,
                    "description": "EXCEL SAMPLESHEET ONLY: Sheet name of Excel (.XLSX, .XLS) samplesheet."
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": false
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "create_excel_outputs": {
                    "type": "boolean",
                    "description": "Convert tab-separated value (TSV) files to Excel spreadsheet files (XLSX) while retaining TSV files. Also creates a summary workbook where each summary output is placed into a separate sheet within the workbook.",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": false
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                },
                "process_log_dir": {
                    "type": "string",
                    "description": "Directory to keep output and error logs from each process.",
                    "hidden": true
                },
                "qc_filecheck_log_dir": {
                    "type": "string",
                    "description": "Directory to keep QC file checks from processes.",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "description": "Boolean whether to show hidden parameters at runtime",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "show_hidden_params": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/analysis_options"
        },
        {
            "$ref": "#/definitions/parsnp_options"
        },
        {
            "$ref": "#/definitions/profile_options"
        },
        {
            "$ref": "#/definitions/spreadsheet_parsing_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
