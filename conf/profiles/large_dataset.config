/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Large dataset profile config - Optimized for 200+ genomes
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
*/

process {
    // Increase resources for memory-intensive processes
    withLabel: process_high_memory {
        cpus   = { check_max( 16 * task.attempt, 'cpus' ) }
        memory = { check_max( 600.GB * task.attempt, 'memory' ) }
        time   = { check_max( 72.h * task.attempt, 'time' ) }
    }
    
    withLabel: process_high {
        cpus   = { check_max( 24 * task.attempt, 'cpus' ) }
        memory = { check_max( 300.GB * task.attempt, 'memory' ) }
        time   = { check_max( 48.h * task.attempt, 'time' ) }
    }
    
    withLabel: process_medium {
        cpus   = { check_max( 12 * task.attempt, 'cpus' ) }
        memory = { check_max( 150.GB * task.attempt, 'memory' ) }
        time   = { check_max( 24.h * task.attempt, 'time' ) }
    }
    
    // Specific optimizations for Gubbins with large datasets
    withName: 'ASSEMBLY_SNPS:RECOMBINATION:RECOMBINATION_GUBBINS' {
        cpus   = { check_max( 16 * task.attempt, 'cpus' ) }
        memory = { check_max( 600.GB * task.attempt, 'memory' ) }
        time   = { check_max( 96.h * task.attempt, 'time' ) }
        errorStrategy = 'retry'
        maxRetries = 3
    }
    
    // Optimize ParSNP for large datasets
    withName: 'ASSEMBLY_SNPS:CORE_GENOME_ALIGNMENT_PARSNP' {
        cpus   = { check_max( 24 * task.attempt, 'cpus' ) }
        memory = { check_max( 300.GB * task.attempt, 'memory' ) }
        time   = { check_max( 48.h * task.attempt, 'time' ) }
    }
    
    // Optimize tree building for large datasets
    withName: 'ASSEMBLY_SNPS:BUILD_PHYLOGENETIC_TREE_PARSNP' {
        cpus   = { check_max( 20 * task.attempt, 'cpus' ) }
        memory = { check_max( 200.GB * task.attempt, 'memory' ) }
        time   = { check_max( 72.h * task.attempt, 'time' ) }
    }
    
    // General error handling for large datasets
    errorStrategy = { task.exitStatus in [130,143,137,104,134,139,140,135] ? 'retry' : 'finish' }
    maxRetries = 2
}

// Large dataset specific parameters
params {
    max_memory = '1000.GB'
    max_cpus   = 64
    max_time   = '168.h'
}

process {
    // Specific optimizations for Gubbins with large datasets
    withName: RECOMBINATION_GUBBINS {
        cpus   = { check_max( 32 * task.attempt, 'cpus' ) }
        memory = { check_max( 800.GB * task.attempt, 'memory' ) }
        time   = { check_max( 120.h * task.attempt, 'time' ) }
        errorStrategy = 'retry'
        maxRetries = 2
    }
    
    // Also increase resources for ParSNP alignment which feeds into Gubbins
    withName: CORE_GENOME_ALIGNMENT_PARSNP {
        cpus   = { check_max( 16 * task.attempt, 'cpus' ) }
        memory = { check_max( 400.GB * task.attempt, 'memory' ) }
        time   = { check_max( 48.h * task.attempt, 'time' ) }
    }
}